-- ASSIGNMENT THREE BY Da Vinci

-- QUESTION ONE

-- CREATING A PROCEDURE
create or replace
procedure DDPROJ_SP
AS
    begin
    -- PRINTING THE REQUIRED VALUES WITH THE HELP OF A CURSOR
    FOR v_rec IN (SELECT *  FROM DD_PROJECT where IDPROJ = 501) LOOP
    dbms_output.put_line('ID=' || v_rec.IDPROJ ||', NAME=' || v_rec.PROJNAME || ', START_DATE =' || v_rec.PROJSTARTDATE || ', END_DATE=' || v_rec.PROJENDDATE || ', PROJFUNDGOAL=' || v_rec.PROJFUNDGOAL || ', COORDINATOR=' || v_rec.PROJCOORD );
    END LOOP;
END DDPROJ_SP;

-- RUNNING THE ANONYMOUS BLOCK
BEGIN
  DDPROJ_SP();
END;



-- QUESTION TWO

-- STEP 1: CREATE REQUIRED TABLE AND STORE IT IN A VIEW
CREATE VIEW DDPAY_SP_VIEW AS
SELECT IDDONOR, IDSTATUS, PAYMONTHS, STATUSDESC
FROM
(SELECT alias1.IDDONOR, alias1.IDSTATUS, alias1.PAYMONTHS, alias2.STATUSDESC
    FROM DD_PLEDGE alias1
 join DD_STATUS alias2
  on alias1.IDSTATUS = alias2.IDSTATUS where alias1.PAYMONTHS > 0 );

-- STEP 2: You can view the store view

select * from DDPAY_SP_VIEW;

-- STEP 3: CREATE THE REQUIRED PROCEDURE
create or replace
procedure DDPAY_SP
( testnumber in number)
AS
BEGIN
    -- PRINTING THE REQUIRED VALUES WITH THE HELP OF A CURSOR
    FOR v_rec IN (SELECT * FROM  DDPAY_SP_VIEW where IDDONOR = testnumber) LOOP
    dbms_output.put_line('IDDONOR= ' || v_rec.IDDONOR);
    IF v_rec.STATUSDESC =  'Open' THEN
    dbms_output.put_line('TRUE');
    END IF;
    END LOOP;
END DDPAY_SP;


-- RUNNING THE ANONYMOUS BLOCK
BEGIN
  DDPAY_SP(308);
END;


-- QUESTION 3

-- CREATE PROCEDURE

create or replace
procedure DDCKPAY_SP
( PAYMENTAMOUNT IN NUMBER,
  PLEDGEID IN NUMBER)
AS
BEGIN
-- CHECK FOR INCORRECT PLEDGE ID
IF (PLEDGEID != 104) THEN
dbms_output.put_line('NO PAYMENT INFO');
END IF;
-- CHECK FOR CORRECT PLEDGE ID IN THE DATABASE
FOR v_rec IN (SELECT * FROM  DD_PAYMENT WHERE IDPLEDGE = PLEDGEID) LOOP
-- CHECK FOR INCORRECT AMOUNT INFO
IF (PAYMENTAMOUNT != 20) THEN
dbms_output.put_line('ERROR 20050 INCORRECT PAYMENT AMOUNT - PLANNED PAYMENT = 20');
END IF;
-- CHECK FOR CORRECT AMOUNT
IF (PAYMENTAMOUNT = 20) THEN
dbms_output.put_line('CORRECT!');
END IF;
END LOOP;
END  DDCKPAY_SP;

-- RUNNING THE ANONYMOUS BLOCK
BEGIN
  DDCKPAY_SP(20,104); -- Correct Amount and Correct ID
  DDCKPAY_SP(20,99); -- Correct Amount and Incorrect ID
  DDCKPAY_SP(25, 104); -- Incorrect Amount and Correct ID
END;



-- QUESTION FOUR

-- 1: GETTING THE TOTAL OF PLEDGEAMOUNT ACCORDING TO PLEDGEID FROM DD_PAYMENT TABLE

SELECT IDPLEDGE, SUM(PAYAMT) "TOTAL" FROM DD_PAYMENT
  GROUP BY IDPLEDGE;

-- 2: JOINING TWO TABLES BASED ON IDPLEDGE

(SELECT alias1.IDPLEDGE, alias1.PLEDGEAMT, alias2.TOTAL, alias1.pledgeamt - alias2.total as DIFFERENCE
    FROM DD_PLEDGE alias1
 join
    (SELECT IDPLEDGE, SUM(PAYAMT) "TOTAL" FROM DD_PAYMENT
     GROUP BY IDPLEDGE) alias2
  on alias1.IDPLEDGE = alias2.IDPLEDGE);

-- 3: A) Store Query as VIEW for further use B) QUERY THE VIEW

-- CREATE THE VIEW
CREATE VIEW DDCKBAL_SP_VIEW AS
SELECT IDPLEDGE, PLEDGEAMT, TOTAL, DIFFERENCE
FROM
(SELECT alias1.IDPLEDGE, alias1.PLEDGEAMT, alias2.TOTAL, alias1.pledgeamt - alias2.total as DIFFERENCE
    FROM DD_PLEDGE alias1
 join
    (SELECT IDPLEDGE, SUM(PAYAMT) "TOTAL" FROM DD_PAYMENT
     GROUP BY IDPLEDGE) alias2
  on alias1.IDPLEDGE = alias2.IDPLEDGE);

-- QUERY THE STORED VIEW
SELECT * FROM DDCKBAL_SP_VIEW;


-- 4: CREATE THE PROCEDURE
create or replace
procedure DDCKBAL_SP
( testnumber in number)
AS
BEGIN
    -- PRINTING THE REQUIRED VALUES WITH THE HELP OF A CURSOR
    FOR v_rec IN (SELECT * FROM  DDCKBAL_SP_VIEW where IDPLEDGE = testnumber) LOOP
    dbms_output.put_line('IDPLEDGE = ' || v_rec.IDPLEDGE || ', PLEDGEAMT = ' || v_rec.PLEDGEAMT || ', TOTAL = ' || v_rec.TOTAL || ', DIFFERENCE = ' || v_rec.DIFFERENCE);
    END LOOP;
END DDCKBAL_SP;


-- RUNNING THE ANONYMOUS BLOCK
BEGIN
  DDCKBAL_SP(104);
END;
